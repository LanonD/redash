{"version":3,"sources":["plotly_renderers.coffee","plotly_renderers.min.js"],"names":["callWithJQuery","pivotModule","exports","module","require","define","amd","jQuery","Plotly","$","makePlotlyChart","makePlotlyScatterChart","traceOptions","layoutOptions","transpose","pivotData","opts","colKeys","data","datumKeys","defaults","fullAggName","groupByTitle","hAxisTitle","layout","result","rowKeys","titleText","traceKeys","localeStrings","vs","by","plotly","extend","getRowKeys","getColKeys","length","push","aggregatorName","valAttrs","join","map","traceKey","datumKey","i","labels","len","trace","val","values","parseFloat","getAggregator","value","isFinite","name","x","y","rowAttrs","colAttrs","title","hovermode","width","window","innerWidth","height","innerHeight","xaxis","automargin","yaxis","appendTo","newPlot","detach","colKey","j","len1","renderArea","rowKey","v","text","type","mode","domain","style","plot","remove","pivotUtilities","plotly_renderers","Horizontal Bar Chart","orientation","barmode","Horizontal Stacked Bar Chart","Bar Chart","Stacked Bar Chart","Line Chart","Scatter Chart","call","this"],"mappings":"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","file":"plotly_renderers.min.js","sourcesContent":["callWithJQuery = (pivotModule) ->\n    if typeof exports is \"object\" and typeof module is \"object\" # CommonJS\n        pivotModule require(\"jquery\"), require(\"plotly.js\")\n    else if typeof define is \"function\" and define.amd # AMD\n        define [\"jquery\", \"plotly.js\"], pivotModule\n    # Plain browser env\n    else\n        pivotModule jQuery, Plotly\n\ncallWithJQuery ($, Plotly) ->\n\n    makePlotlyChart = (traceOptions = {}, layoutOptions = {}, transpose = false) ->\n        (pivotData, opts) ->\n            defaults =\n                localeStrings: {vs: \"vs\", by: \"by\"}\n                plotly: {}\n\n            opts = $.extend(true, {}, defaults, opts)\n\n            rowKeys = pivotData.getRowKeys()\n            colKeys = pivotData.getColKeys()\n            traceKeys = if transpose then colKeys else rowKeys\n            traceKeys.push([]) if traceKeys.length == 0\n            datumKeys = if transpose then rowKeys else colKeys\n            datumKeys.push([]) if datumKeys.length == 0\n\n            fullAggName = pivotData.aggregatorName\n            if pivotData.valAttrs.length\n                fullAggName += \"(#{pivotData.valAttrs.join(\", \")})\"\n\n            data = traceKeys.map (traceKey) ->\n                values = []\n                labels = []\n                for datumKey in datumKeys\n                    val = parseFloat(pivotData.getAggregator(\n                        if transpose then datumKey else traceKey,\n                        if transpose then traceKey else datumKey\n                    ).value())\n                    values.push(if isFinite(val) then val else null)\n                    labels.push(datumKey.join('-') || ' ')\n\n                trace = {name: traceKey.join('-') || fullAggName}\n                trace.x = if transpose then values else labels\n                trace.y = if transpose then labels else values\n                return $.extend(trace, traceOptions)\n\n            if transpose\n                hAxisTitle = pivotData.rowAttrs.join(\"-\")\n                groupByTitle = pivotData.colAttrs.join(\"-\")\n            else\n                hAxisTitle = pivotData.colAttrs.join(\"-\")\n                groupByTitle = pivotData.rowAttrs.join(\"-\")\n            titleText = fullAggName\n            titleText += \" #{opts.localeStrings.vs} #{hAxisTitle}\" if hAxisTitle != \"\"\n            titleText += \" #{opts.localeStrings.by} #{groupByTitle}\" if groupByTitle != \"\"\n\n            layout = {\n                title: titleText\n                hovermode: 'closest'\n                width: window.innerWidth / 1.4\n                height: window.innerHeight / 1.4 - 50\n                xaxis:\n                    title: if transpose then fullAggName else null\n                    automargin: true\n                yaxis:\n                    title: if transpose then null else fullAggName\n                    automargin: true\n            }\n\n            result = $(\"<div>\").appendTo $(\"body\")\n            Plotly.newPlot(result[0], data, $.extend(layout, layoutOptions, opts.plotly))\n            return result.detach()\n\n    makePlotlyScatterChart = -> (pivotData, opts) ->\n        defaults =\n            localeStrings: {vs: \"vs\", by: \"by\"}\n            plotly: {}\n\n        opts = $.extend(true, {}, defaults, opts)\n\n        rowKeys = pivotData.getRowKeys()\n        rowKeys.push [] if rowKeys.length == 0\n        colKeys = pivotData.getColKeys()\n        colKeys.push [] if colKeys.length == 0\n\n        data = {x: [], y: [], text: [], type: 'scatter', mode: 'markers'}\n\n        for rowKey in rowKeys\n            for colKey in colKeys\n                v = pivotData.getAggregator(rowKey, colKey).value()\n                if v?\n                    data.x.push(colKey.join('-'))\n                    data.y.push(rowKey.join('-'))\n                    data.text.push(v)\n\n        layout = {\n            title: pivotData.rowAttrs.join(\"-\") + ' vs ' + pivotData.colAttrs.join(\"-\")\n            hovermode: 'closest',\n            xaxis: {title: pivotData.colAttrs.join('-'), domain: [0.1, 1.0]},\n            yaxis: {title: pivotData.rowAttrs.join('-')},\n            width: window.innerWidth / 1.5,\n            height: window.innerHeight / 1.4 - 50\n        }\n\n        renderArea = $(\"<div>\", style: \"display:none;\").appendTo $(\"body\")\n        result = $(\"<div>\").appendTo renderArea\n        Plotly.plot(result[0], [data], $.extend(layout, opts.plotly))\n        result.detach()\n        renderArea.remove()\n        return result\n\n    $.pivotUtilities.plotly_renderers =\n        \"Horizontal Bar Chart\": makePlotlyChart({type: 'bar', orientation: 'h'},\n            {barmode: 'group'}, true)\n        \"Horizontal Stacked Bar Chart\": makePlotlyChart({type: 'bar', orientation: 'h'},\n            {barmode: 'stack'}, true)\n        \"Bar Chart\": makePlotlyChart({type: 'bar'}, {barmode: 'group'})\n        \"Stacked Bar Chart\": makePlotlyChart({type: 'bar'}, {barmode: 'stack'})\n        \"Line Chart\": makePlotlyChart()\n        \"Scatter Chart\": makePlotlyScatterChart()\n","(function() {\n  var callWithJQuery;\n\n  callWithJQuery = function(pivotModule) {\n    if (typeof exports === \"object\" && typeof module === \"object\") {\n      return pivotModule(require(\"jquery\"), require(\"plotly.js\"));\n    } else if (typeof define === \"function\" && define.amd) {\n      return define([\"jquery\", \"plotly.js\"], pivotModule);\n    } else {\n      return pivotModule(jQuery, Plotly);\n    }\n  };\n\n  callWithJQuery(function($, Plotly) {\n    var makePlotlyChart, makePlotlyScatterChart;\n    makePlotlyChart = function(traceOptions, layoutOptions, transpose) {\n      if (traceOptions == null) {\n        traceOptions = {};\n      }\n      if (layoutOptions == null) {\n        layoutOptions = {};\n      }\n      if (transpose == null) {\n        transpose = false;\n      }\n      return function(pivotData, opts) {\n        var colKeys, data, datumKeys, defaults, fullAggName, groupByTitle, hAxisTitle, layout, result, rowKeys, titleText, traceKeys;\n        defaults = {\n          localeStrings: {\n            vs: \"vs\",\n            by: \"by\"\n          },\n          plotly: {}\n        };\n        opts = $.extend(true, {}, defaults, opts);\n        rowKeys = pivotData.getRowKeys();\n        colKeys = pivotData.getColKeys();\n        traceKeys = transpose ? colKeys : rowKeys;\n        if (traceKeys.length === 0) {\n          traceKeys.push([]);\n        }\n        datumKeys = transpose ? rowKeys : colKeys;\n        if (datumKeys.length === 0) {\n          datumKeys.push([]);\n        }\n        fullAggName = pivotData.aggregatorName;\n        if (pivotData.valAttrs.length) {\n          fullAggName += \"(\" + (pivotData.valAttrs.join(\", \")) + \")\";\n        }\n        data = traceKeys.map(function(traceKey) {\n          var datumKey, i, labels, len, trace, val, values;\n          values = [];\n          labels = [];\n          for (i = 0, len = datumKeys.length; i < len; i++) {\n            datumKey = datumKeys[i];\n            val = parseFloat(pivotData.getAggregator(transpose ? datumKey : traceKey, transpose ? traceKey : datumKey).value());\n            values.push(isFinite(val) ? val : null);\n            labels.push(datumKey.join('-') || ' ');\n          }\n          trace = {\n            name: traceKey.join('-') || fullAggName\n          };\n          trace.x = transpose ? values : labels;\n          trace.y = transpose ? labels : values;\n          return $.extend(trace, traceOptions);\n        });\n        if (transpose) {\n          hAxisTitle = pivotData.rowAttrs.join(\"-\");\n          groupByTitle = pivotData.colAttrs.join(\"-\");\n        } else {\n          hAxisTitle = pivotData.colAttrs.join(\"-\");\n          groupByTitle = pivotData.rowAttrs.join(\"-\");\n        }\n        titleText = fullAggName;\n        if (hAxisTitle !== \"\") {\n          titleText += \" \" + opts.localeStrings.vs + \" \" + hAxisTitle;\n        }\n        if (groupByTitle !== \"\") {\n          titleText += \" \" + opts.localeStrings.by + \" \" + groupByTitle;\n        }\n        layout = {\n          title: titleText,\n          hovermode: 'closest',\n          width: window.innerWidth / 1.4,\n          height: window.innerHeight / 1.4 - 50,\n          xaxis: {\n            title: transpose ? fullAggName : null,\n            automargin: true\n          },\n          yaxis: {\n            title: transpose ? null : fullAggName,\n            automargin: true\n          }\n        };\n        result = $(\"<div>\").appendTo($(\"body\"));\n        Plotly.newPlot(result[0], data, $.extend(layout, layoutOptions, opts.plotly));\n        return result.detach();\n      };\n    };\n    makePlotlyScatterChart = function() {\n      return function(pivotData, opts) {\n        var colKey, colKeys, data, defaults, i, j, layout, len, len1, renderArea, result, rowKey, rowKeys, v;\n        defaults = {\n          localeStrings: {\n            vs: \"vs\",\n            by: \"by\"\n          },\n          plotly: {}\n        };\n        opts = $.extend(true, {}, defaults, opts);\n        rowKeys = pivotData.getRowKeys();\n        if (rowKeys.length === 0) {\n          rowKeys.push([]);\n        }\n        colKeys = pivotData.getColKeys();\n        if (colKeys.length === 0) {\n          colKeys.push([]);\n        }\n        data = {\n          x: [],\n          y: [],\n          text: [],\n          type: 'scatter',\n          mode: 'markers'\n        };\n        for (i = 0, len = rowKeys.length; i < len; i++) {\n          rowKey = rowKeys[i];\n          for (j = 0, len1 = colKeys.length; j < len1; j++) {\n            colKey = colKeys[j];\n            v = pivotData.getAggregator(rowKey, colKey).value();\n            if (v != null) {\n              data.x.push(colKey.join('-'));\n              data.y.push(rowKey.join('-'));\n              data.text.push(v);\n            }\n          }\n        }\n        layout = {\n          title: pivotData.rowAttrs.join(\"-\") + ' vs ' + pivotData.colAttrs.join(\"-\"),\n          hovermode: 'closest',\n          xaxis: {\n            title: pivotData.colAttrs.join('-'),\n            domain: [0.1, 1.0]\n          },\n          yaxis: {\n            title: pivotData.rowAttrs.join('-')\n          },\n          width: window.innerWidth / 1.5,\n          height: window.innerHeight / 1.4 - 50\n        };\n        renderArea = $(\"<div>\", {\n          style: \"display:none;\"\n        }).appendTo($(\"body\"));\n        result = $(\"<div>\").appendTo(renderArea);\n        Plotly.plot(result[0], [data], $.extend(layout, opts.plotly));\n        result.detach();\n        renderArea.remove();\n        return result;\n      };\n    };\n    return $.pivotUtilities.plotly_renderers = {\n      \"Horizontal Bar Chart\": makePlotlyChart({\n        type: 'bar',\n        orientation: 'h'\n      }, {\n        barmode: 'group'\n      }, true),\n      \"Horizontal Stacked Bar Chart\": makePlotlyChart({\n        type: 'bar',\n        orientation: 'h'\n      }, {\n        barmode: 'stack'\n      }, true),\n      \"Bar Chart\": makePlotlyChart({\n        type: 'bar'\n      }, {\n        barmode: 'group'\n      }),\n      \"Stacked Bar Chart\": makePlotlyChart({\n        type: 'bar'\n      }, {\n        barmode: 'stack'\n      }),\n      \"Line Chart\": makePlotlyChart(),\n      \"Scatter Chart\": makePlotlyScatterChart()\n    };\n  });\n\n}).call(this);\n\n//# sourceMappingURL=plotly_renderers.js.map\n"]}